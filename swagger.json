{
    "swagger": "2.0",
    "info": {
        "title": "book Club API",
        "description": "Description",
        "version": "1.0.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "paths": {
        "/bookspage": {
            "get": {
                "description": "Calls a view with ejs",
                "parameters": [],
                "responses": {}
            }
        },
        "/": {
            "get": {
                "description": "Calls a view with ejs",
                "summary": "it is a try for frontEnd",
                "parameters": [],
                "responses": {}
            }
        },
        "/login/login": {
            "post": {
                "description": "Call an API LOGIN endpoint",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "example": "jose@dasilva.com"
                            },
                            "password": {
                                "example": "Xpty7(*)g"
                            }
                        }
                    }
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/login/logout": {
            "get": {
                "description": "Log out by destroying sessions and cookies",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/google/googlelogin": {
            "get": {
                "description": "Applys OAUTH autentication to API proccess",
                "summary": "It retrives user information from Google ",
                "parameters": [],
                "responses": {}
            }
        },
        "/google/callback": {
            "get": {
                "description": "Call Back function after google successfully logs in user",
                "summary": "callBack to keep user authorized",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/students/getall": {
            "get": {
                "description": "Retrives All student",
                "summary": "retrieves all students",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/students/getone/{id}": {
            "get": {
                "description": "",
                "summary": "Get an specific student",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/students/register": {
            "post": {
                "description": "",
                "summary": "insert new student at database",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "example": "any"
                            },
                            "birth": {
                                "example": "any"
                            },
                            "class": {
                                "example": "any"
                            },
                            "email": {
                                "example": "any"
                            }
                        }
                    }
                }],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/students/update/{id}": {
            "patch": {
                "description": "",
                "summary": "apdate data for a student",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "example": "any"
                                },
                                "email": {
                                    "example": "any"
                                },
                                "birth": {
                                    "example": "any"
                                },
                                "class": {
                                    "example": "any"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/students/remove/{id}": {
            "delete": {
                "description": "",
                "summary": "remove an student from dataBase",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/getall": {
            "get": {
                "description": "",
                "summary": "retrives all books from dataBase",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/getone/{id}": {
            "get": {
                "description": "",
                "summary": "get an specific book",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/register": {
            "post": {
                "description": "",
                "summary": "insert book in dataBase",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "bookName": {
                                "example": "any"
                            },
                            "belongsTo": {
                                "example": "any"
                            },
                            "class": {
                                "example": "any"
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/books/update/{id}": {
            "patch": {
                "description": "",
                "summary": "update a book from database",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "studentName": {
                                    "example": "any"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/remove/{id}": {
            "delete": {
                "description": "",
                "summary": "remove a book from database",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/teachers/getall": {
            "get": {
                "description": "",
                "summary": "get all teacher from database",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/teachers/getone/{id}": {
            "get": {
                "description": "",
                "summary": "get an specific teacher from database",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/teachers/register": {
            "post": {
                "description": "",
                "summary": "insert a new teacher at database",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "password": {
                                "example": "any"
                            },
                            "name": {
                                "example": "any"
                            },
                            "email": {
                                "example": "any"
                            },
                            "birth": {
                                "example": "any"
                            },
                            "teacherLevel": {
                                "example": "any"
                            },
                            "class": {
                                "example": "any"
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/teachers/update/{id}": {
            "patch": {
                "description": "",
                "summary": "update specific teacher information",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "example": "any"
                                },
                                "email": {
                                    "example": "any"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/teachers/remove/{id}": {
            "delete": {
                "description": "",
                "summary": "remove a teacher from database",
                "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    }
}